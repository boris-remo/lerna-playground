name: Run visual tests

on:
  pull_request:
    branches: [master]
    types: [synchronize, labeled]
  push:
    branches: [master]

jobs:
  should_visual_test:
    runs-on: ubuntu-latest
    env:
      IS_MASTER: |
        ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    outputs:
      result: |
        ${{ env.IS_MASTER == true || steps.determine_run.outputs.result }}
    steps:
      - uses: actions/checkout@v2
        if: ${{ env.IS_MASTER == false}}

      - name: Check for client changes
        if: ${{ env.IS_MASTER == false}}
        id: detect_client_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**/*'

      - name: Check for required labels
        if: ${{ env.IS_MASTER == false }}
        id: check-labels
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          any_of: qa-approved,ready-for-qa,force-visual-test

      - name: Determine happo run
        if: ${{ env.IS_MASTER == false}}
        uses: actions/github-script@v5
        id: determine_run
        with:
          result-encoding: string
          script: |
            const isReadyForQa = ${{steps.detect_client_changes.outputs.client }} && '${{steps.check-labels.outcome }}' == 'success'
            return isReadyForQa

  run-happo:
    needs: should_visual_test
    if: ${{ needs.should_visual_test.outputs.result == true }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            client/package-lock.json

      - name: Authenticate with GitHub package registry
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{
          secrets.PRIVATE_REPO_ACCESS_TOKEN }}" > ~/.npmrc

      - name: Install root dependencies
        # postinstall scripts cover DD, cypress and other libs not required for visual testing
        run: npm ci --ignore-scripts

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: GCloud Auth
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{secrets.GCLOUD_ENC_KEY_AUTOMATION}}
          export_default_credentials: true

      - name: Grab client .env
        uses: actions/github-script@v5
        id: get-env
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/scripts/buildEnv.js`)
            await script({ github, context, core, projectId: '${{secrets.PROJECT_ID_AUTOMATION}}', deployTo: 'test' })

      - name: Move test-client.env => client/.env
        run: mv test-client.env client/.env

      - name: Happo
        working-directory: ./client
        run: npx happo-ci-github-actions
        env:
          HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
          HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}

  skip-happo:
    needs: should_visual_test
    if: ${{ needs.should_visual_test.outputs.result == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Compute Happo Hash
        id: compute_happo_hash
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/scripts/computeHappoHash.js`);
            return script(
              "${{ secrets.HAPPO_API_KEY }}",
              "${{ secrets.HAPPO_API_SECRET }}",
            );
      - name: Skip Happo
        run: |
          echo "Skipping Happo tests because no files in client/ have been updated or Ready for QA label has not been added yet"
          curl -H "Authorization: Basic ${{ steps.compute_happo_hash.outputs.result }}" -X POST https://happo.io/api/skip/${{ github.event.pull_request.head.sha }}
