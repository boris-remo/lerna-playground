name: Automate PR synchronize

on:
  pull_request:
    types: [synchronize]

jobs:
  dismiss-reviews:
    runs-on: ubuntu-latest
    # if: "!(contains(github.event.head_commit.message, 'Merge') && contains(github.event.head_commit.message, 'master'))"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          # for pull_request so we can do HEAD^2
          fetch-depth: 2

      - name: Get commit message
        id: get_commit_message
        run: |
          echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD^2)

      - run: echo "${{ steps.get_commit_message.outputs.commit_message }}"

      - id: detect_changes
        uses: actions/github-script@v5
        env:
          commitMessage: ${{ steps.get_commit_message.outputs.commit_message }}
        with:
          script: |
            const { commitMessage } = process.env
            console.log('commitMessage', commitMessage)

            const formattedCommitMessage = commitMessage.toLowerCase()
            console.log('formattedCommitMessage', formattedCommitMessage)


            if (formattedCommitMessage.includes('Merge') || formattedCommitMessage.includes('master')) {
              return false
            }
            return true

      - name: View context attributes
        uses: actions/github-script@v5
        with:
          script: console.log(context)

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$STEPS_CONTEXT"

      - run: echo ${{ github.event.head_commit.message }}

      - name: Remove peer-approved label if changes are added

        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.ADMIN }}
          labels: peer-approved

      - name: Remove ready-for-qa label if changes are added

        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.ADMIN }}
          labels: ready-for-qa

      - name: Remove qa-approved label if changes are added

        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.ADMIN }}
          labels: qa-approved

      - name: Remove qa-rejected label if changes are added

        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.ADMIN }}
          labels: qa-rejected
